{"version":3,"sources":["App.js","index.js"],"names":["App","useState","quotes","setQuotes","className","quote","author","onClick","fetch","then","res","json","data","rndmNum","Math","floor","random","length","myQuote","document","querySelector","innerHTML","myAuthor","sessionStorage","setItem","JSON","stringify","addQuoteToStor","getQuoteFromStor","parse","getItem","getAuthorFromStor","ReactDOM","render","getElementById"],"mappings":"yLAiDeA,EA9CH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACPC,EADO,KACCC,EADD,KAiChB,OACE,sBAAKC,UAAU,MAAf,UACI,oBAAIA,UAAU,QAAd,oBACA,sBAAKA,UAAU,YAAf,UACI,mBAAGA,UAAU,QAAb,SAAsBF,EAAOG,QAC7B,mBAAGD,UAAU,SAAb,SAAuBF,EAAOI,SAC9B,wBAAQF,UAAU,MAAMG,QAAS,WAhBrCC,MAAM,yIACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF,IAAIC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,QAC9Cd,EAAUS,EAAKC,OAxBJ,WACnB,IAAIK,EAAUC,SAASC,cAAc,UAAUC,UAC3CC,EAAWH,SAASC,cAAc,WAAWC,UAEjDE,eAAeC,QAAQ,QAASC,KAAKC,UAAUR,IAC/CK,eAAeC,QAAQ,SAAUC,KAAKC,UAAUJ,IA+BUK,IAAtD,uBACA,wBAAQvB,UAAU,UAAUG,QA7BV,WACtB,IAAIW,EAAUC,SAASC,cAAc,UACjCE,EAAWH,SAASC,cAAc,WAEhCQ,EAAmBH,KAAKI,MAAMN,eAAeO,QAAQ,UACrDC,EAAoBN,KAAKI,MAAMN,eAAeO,QAAQ,WAE5DZ,EAAQG,UAAYO,EACpBN,EAASD,UAAYU,GAqBjB,mCCtCZC,IAASC,OACL,cAAC,EAAD,IAEFd,SAASe,eAAe,U","file":"static/js/main.7e441bfd.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\n\nconst App = () => {\n    const [quotes, setQuotes] = useState('');\n\n    const addQuoteToStor = () =>{\n        let myQuote = document.querySelector('.quote').innerHTML;\n        let myAuthor = document.querySelector('.author').innerHTML;\n\n        sessionStorage.setItem('quote', JSON.stringify(myQuote));\n        sessionStorage.setItem('author', JSON.stringify(myAuthor));\n    }\n\n    const takeQuoteFromStor = () =>{\n        let myQuote = document.querySelector('.quote');\n        let myAuthor = document.querySelector('.author');\n\n        const getQuoteFromStor = JSON.parse(sessionStorage.getItem('quote'));\n        const getAuthorFromStor = JSON.parse(sessionStorage.getItem('author'));\n\n        myQuote.innerHTML = getQuoteFromStor;\n        myAuthor.innerHTML = getAuthorFromStor;\n    }\n\n    const fetchQuote = () => {\n        fetch('https://gist.githubusercontent.com/natebass/b0a548425a73bdf8ea5c618149fe1fce/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json')\n            .then(res => res.json())\n            .then(data => {\n                let rndmNum = Math.floor(Math.random() * data.length);\n                setQuotes(data[rndmNum]);\n            });\n\n    };\n\n\n  return (\n    <div className=\"App\">\n        <h1 className=\"title\">Quotes</h1>\n        <div className=\"quoteMain\">\n            <p className=\"quote\">{quotes.quote}</p>\n            <p className=\"author\">{quotes.author}</p>\n            <button className=\"btn\" onClick={() => {fetchQuote(); addQuoteToStor()}}>New Quote</button>\n            <button className=\"prevBtn\" onClick={takeQuoteFromStor}>Previous Quote</button>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}